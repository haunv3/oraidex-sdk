diff --git a/packages/contracts-sdk/src/OraiswapOracle.client.ts b/packages/contracts-sdk/src/OraiswapOracle.client.ts
index 4ca1e5e..8e8a460 100644
--- a/packages/contracts-sdk/src/OraiswapOracle.client.ts
+++ b/packages/contracts-sdk/src/OraiswapOracle.client.ts
@@ -54,7 +54,9 @@ export class OraiswapOracleQueryClient implements OraiswapOracleReadOnlyInterfac
 
   taxRate = async (): Promise<TaxRateResponse> => {
     return this.client.queryContractSmart(this.contractAddress, {
-      tax_rate: {}
+      treasury: {
+        tax_rate: {}
+      }
     });
   };
   taxCap = async ({
@@ -63,8 +65,10 @@ export class OraiswapOracleQueryClient implements OraiswapOracleReadOnlyInterfac
     denom: string;
   }): Promise<TaxCapResponse> => {
     return this.client.queryContractSmart(this.contractAddress, {
-      tax_cap: {
-        denom
+      treasury: {
+        tax_cap: {
+          denom
+        }
       }
     });
   };
@@ -76,9 +80,11 @@ export class OraiswapOracleQueryClient implements OraiswapOracleReadOnlyInterfac
     quoteDenom: string;
   }): Promise<ExchangeRateResponse> => {
     return this.client.queryContractSmart(this.contractAddress, {
-      exchange_rate: {
-        base_denom: baseDenom,
-        quote_denom: quoteDenom
+      exchange: {
+        exchange_rate: {
+          base_denom: baseDenom,
+          quote_denom: quoteDenom
+        }
       }
     });
   };
@@ -90,15 +96,19 @@ export class OraiswapOracleQueryClient implements OraiswapOracleReadOnlyInterfac
     quoteDenoms: string[];
   }): Promise<ExchangeRatesResponse> => {
     return this.client.queryContractSmart(this.contractAddress, {
-      exchange_rates: {
-        base_denom: baseDenom,
-        quote_denoms: quoteDenoms
+      exchange: {
+        exchange_rates: {
+          base_denom: baseDenom,
+          quote_denoms: quoteDenoms
+        }
       }
     });
   };
   contractInfo = async (): Promise<ContractInfoResponse> => {
     return this.client.queryContractSmart(this.contractAddress, {
-      contract_info: {}
+      contract: {
+        contract_info: {}
+      }
     });
   };
   rewardPool = async ({
@@ -107,8 +117,10 @@ export class OraiswapOracleQueryClient implements OraiswapOracleReadOnlyInterfac
     denom: string;
   }): Promise<Coin> => {
     return this.client.queryContractSmart(this.contractAddress, {
-      reward_pool: {
-        denom
+      contract: {
+        reward_pool: {
+          denom
+        }
       }
     });
   };
